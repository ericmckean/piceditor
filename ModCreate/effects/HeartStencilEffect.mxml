<?xml version="1.0" encoding="utf-8"?>
<cnt:CircularOverlayEffectCanvas xmlns="effects.*" xmlns:cnt="containers.*" xmlns:ctrl="controls.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="335" xmlns:local="*" 
		xmlns:imageOperations="imagine.imageOperations.*" xmlns:flash.filters="flash.filters.*"
		xFocus = "{zeroR + imagewidth/2}"
		yFocus = "{zeroR + imageheight/2}"
		liveUpdate="false" urlid="LoveFlare">
	<mx:Script>
	<![CDATA[
		import util.LocUtil;
		import util.SVGPaths;
		import mx.resources.ResourceBundle;
   		[Bindable] [ResourceBundle("HeartStencilEffect")] private var rb:ResourceBundle;
   		
		import util.VBitmapData;
   		public var _sprOverlay:Sprite = null;
   		private var _fDraggingThumb:Boolean = false;
   		
		public override function UpdateOverlay(): void {
			if (!_mcOverlay) return;
			if (!effectMask) return;
			// These are in document coordinates
			var rcd:Rectangle = new Rectangle(effectMask.xCenter, effectMask.yCenter, effectMask.getWidthRadius(), effectMask.getHeightRadius());
			var rcl:Rectangle = _imgv.RclFromRcd(rcd);
			var xCenter:Number = rcl.x;
			var yCenter:Number = rcl.y;
			const cxyCrossHairRadius:Number = 10;
			
			if (null == _sprOverlay) {
				_sprOverlay = new Sprite();
				_mcOverlay.addChild(_sprOverlay);
			}

			_sprOverlay.graphics.clear();
			_sprOverlay.graphics.lineStyle(1, 0x000000, 0.3, true);						
			_sprOverlay.graphics.moveTo(1 - cxyCrossHairRadius, 1);
			_sprOverlay.graphics.lineTo(1 + cxyCrossHairRadius, 1);
			_sprOverlay.graphics.moveTo(1, 1 - cxyCrossHairRadius);
			_sprOverlay.graphics.lineTo(1, 1 + cxyCrossHairRadius);

			if (_fOverlayMouseDown || _fDraggingThumb) {
				effectMask.DrawOutline(_sprOverlay.graphics, 1-rcl.width/2, 1-rcl.height/2, rcl.width, rcl.height);			
			}			
			
			_sprOverlay.graphics.lineStyle(1, 0xffffff, 0.3, true);
			_sprOverlay.graphics.moveTo(0 - cxyCrossHairRadius, 0);
			_sprOverlay.graphics.lineTo(0 + cxyCrossHairRadius, 0);
			_sprOverlay.graphics.moveTo(0, 0 - cxyCrossHairRadius);
			_sprOverlay.graphics.lineTo(0, 0 + cxyCrossHairRadius);

			if (_fOverlayMouseDown || _fDraggingThumb) {
				effectMask.DrawOutline(_sprOverlay.graphics, 0-rcl.width/2, 0-rcl.height/2, rcl.width, rcl.height);			
			}			

			// position the sprite
			_sprOverlay.rotation = _sldrRotation.value*180/100;
			_sprOverlay.x = xCenter;
			_sprOverlay.y = yCenter;
		}  	
	]]>		
	</mx:Script>

	<mx:Array id="_resetValues">
		<local:StoredValue target="_cpkrTint.selectedColor"/>
		<local:StoredValue target="_sldrFade.value"/>
		<local:StoredValue target="_sldrSize.value"/>
		<local:StoredValue target="_sldrRotation.value"/>
		<local:StoredValue target="_sprOverlay"/>
	</mx:Array>
	
	<ctrl:EffectButton id="_efbtn" cornerRadius="0" strTitle="@Resource(key='_efbtn', bundle='HeartStencilEffect')" strAuthor="@Resource(key='_efbtn_1', bundle='HeartStencilEffect')"
		strImageSource="../graphics/effects/Frames/heartstencil.png" premium="{premium}"/>
	<mx:String id="_strHelpText">{Resource.getString('HeartStencilEffect', '_strHelpText')}</mx:String>

	<mx:VBox x="10" y="67" verticalGap="0">
		<mx:HBox width="194" paddingBottom="-5" paddingTop="3">
			<mx:Label text="@Resource(key='Size', bundle='HeartStencilEffect')" styleName="sliderTitle"/>
			<mx:Label text="{Math.round(_sldrSize.value)}%" styleName="sliderValue" textAlign="right" width="100%"/>
		</mx:HBox>
		<ctrl:HSliderPlus width="191" minimum="0" maximum="100" value="50"
				id="_sldrSize" 
				liveDragging="true" showDataTip="false"
				thumbPress="ShowOverlay();_fDraggingThumb=true" 
				thumbRelease=" _fDraggingThumb=false;HideOverlay();OnOpChange()"
				change="if( _fDraggingThumb) ShowOverlay(); else OnOpChange()"/>				

		<mx:HBox width="194" paddingBottom="-5" paddingTop="3">
			<mx:Label text="@Resource(key='Rotation', bundle='HeartStencilEffect')" styleName="sliderTitle"/>
			<mx:Label text="{Math.round(_sldrRotation.value*2)}%" styleName="sliderValue" textAlign="right" width="100%"/>
		</mx:HBox>
		<ctrl:HSliderPlus width="191" minimum="-50" maximum="50" value="0"
				id="_sldrRotation" 
				liveDragging="true" showDataTip="false"
				thumbPress="ShowOverlay();_fDraggingThumb=true" 
				thumbRelease=" _fDraggingThumb=false;HideOverlay();OnOpChange()"
				change="if( _fDraggingThumb) ShowOverlay(); else OnOpChange()"/>				
		
		<mx:Spacer height="5"/>
			<mx:HBox paddingTop="5" paddingLeft="5" paddingRight="8" paddingBottom="5" horizontalGap="5" width="190" horizontalScrollPolicy="off"
				cornerRadius="5" backgroundColor="#ffffff" borderColor="#d9d9d9" borderStyle="solid" backgroundAlpha=".4" verticalAlign="middle">
			<ctrl:ResizingLabel text="@Resource(key='Tint', bundle='HeartStencilEffect')" styleName="sliderTitle" paddingTop="2" width="100%" autoFontSizeGap="1"/>
			<ctrl:HSBColorPicker id="_cpkrTint" selectedColor="{0xFF3399 + zeroR}" liveColorChange="OnBufferedOpChange()" width="50"/>
		</mx:HBox>

		<mx:Spacer height="5"/>
		<mx:HBox width="194" paddingBottom="-5" paddingTop="3">
			<mx:Label text="@Resource(key='Fade', bundle='HeartStencilEffect')" styleName="sliderTitle"/>
			<mx:Label text="{Math.round(_sldrFade.value*100)}%" styleName="sliderValue" textAlign="right" width="100%"/>
		</mx:HBox>
		<ctrl:HSliderPlus width="191" minimum="0" maximum="1" value="0"
				id="_sldrFade" change="OnOpChange()" liveDragging="true" showDataTip="false"/>		

	
		<ctrl:ApplyCancelEffectButtons addBoxPadding="true" premium="{premium}"/>
	</mx:VBox>
	
	<mx:Number id="_targetHeight">{imagewidth*_sldrSize.value/100}</mx:Number>
	<mx:Number id="_targetWidth">{_targetHeight}</mx:Number>

	<imageOperations:SVGGradientImageMask
		svgpath="{SVGPaths.HEART}"
		width="{zeroR + imagewidth}" height="{zeroR + imageheight}" 
		xCenter="{zeroR + xFocus}" yCenter="{zeroR + yFocus}" 
		innerRadius="{_targetHeight}" 
		outerRadius="{_targetHeight}" 
		outerAlpha = "1"
		innerAlpha = "0"
		id="_msk"/>

	<imageOperations:NestedImageOperation id="_op" BlendMode="add" BlendAlpha="{1-_sldrFade.value}">	
		<imageOperations:children>
			<imageOperations:ShapeImageOperation shape="{SVGPaths.HEART}"
				    x="{zeroR + xFocus}" y="{zeroR + yFocus}" rotation="{_sldrRotation.value*Math.PI/100}"
				    width="{_targetWidth}" height="{_targetHeight}" shapeBlend="overlay"
					colors="{[_cpkrTint.liveColor]}" alphas="{[1.0]}" ratios="{[255]}"/>
			<imageOperations:ShapeImageOperation shape="{SVGPaths.HEART}"
				    x="{zeroR + xFocus}" y="{zeroR + yFocus}" rotation="{_sldrRotation.value*Math.PI/100}"
				    width="{_targetWidth}" height="{_targetHeight}" invertFill="true"
					colors="{[0x000000]}" alphas="{[1.0]}" ratios="{[255]}"/>		
			<imageOperations:RadialBlurImageOperation BlendMode="normal" x="{zeroR + xFocus}" y="{zeroR + yFocus}" amount="80" ignoreObjects="true"/>
			<imageOperations:ShapeImageOperation shape="{SVGPaths.HEART}"
				    x="{zeroR + xFocus}" y="{zeroR + yFocus}" rotation="{_sldrRotation.value*Math.PI/100}"
				    width="{_targetWidth}" height="{_targetHeight}"
					colors="{[0x000000]}" alphas="{[1.0]}" ratios="{[255]}"/>
		</imageOperations:children>					
	</imageOperations:NestedImageOperation>
</cnt:CircularOverlayEffectCanvas>



