<?xml version="1.0" encoding="utf-8"?>
<cnt:PaintEffectCanvas xmlns:cnt="containers.*" xmlns="controls.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="151" 
	xmlns:local="*" xmlns:imageOperations="imagine.imageOperations.*" urlid="Boost">
	<mx:Script>
		import util.LocUtil;
		import mx.resources.ResourceBundle;
   		[Bindable] [ResourceBundle("BoostEffect")] private var rb:ResourceBundle;
	</mx:Script>


	<mx:Array id="_resetValues">
		<local:StoredValue target="_sldrImpact.value"/>
	</mx:Array>
	
	<EffectButton id="_efbtn" strTitle="@Resource(key='_efbtn', bundle='BoostEffect')" strAuthor="@Resource(key='_efbtn_1', bundle='BoostEffect')" strImageSource="../graphics/effects/Basics/boost.png"/>
	<mx:String id="_strHelpText">{Resource.getString('BoostEffect', '_strHelpText')}</mx:String>

	<mx:VBox x="0" y="70" verticalGap="0" paddingLeft="8" paddingRight="8">
		<mx:HBox horizontalGap="5" verticalAlign="middle">
			<!-- Fade label/percent/slider box -->
			<mx:VBox verticalGap="0" width="157" horizontalScrollPolicy="off">
				<mx:HBox width="100%" paddingBottom="-5">
					<mx:Label text="@Resource(key='Label_1', bundle='BoostEffect')" styleName="sliderTitle"/>
					<mx:Label text="{LocUtil.pct((_sldrImpact.value))}" styleName="sliderValue" textAlign="right" width="100%"/>
				</mx:HBox>
					<HSliderPlus width="157" minimum="0" maximum="100" value="50" id="_sldrImpact" change="OnOpChange()" liveDragging="true" showDataTip="false"/>
			</mx:VBox>
			<mx:Button id="_btnBrushPalette" width="30" height="30" selected="false" toggle="true" icon="@Embed('/assets/bitmaps/icon_paintTall.png')" paddingLeft="0"
				toolTip="@Resource(key='_btnBrushPalette', bundle='BoostEffect')"/>
		</mx:HBox>

		<ApplyCancelEffectButtons addBoxPadding="true" premium="{premium}"/>
	</mx:VBox>
	
	<imageOperations:SimpleColorMatrixImageOperation id="_op" Brightness="{_sldrImpact.value * -20 / 50}" Saturation="{_sldrImpact.value * 20 / 50}" Contrast="{_sldrImpact.value * 40 / 50}" BlendAlpha="100" Mask="{_mctr.mask}"/>
</cnt:PaintEffectCanvas>
