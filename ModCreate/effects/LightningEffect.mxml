<?xml version="1.0" encoding="utf-8"?>
<cnt:TwoPointOverlayEffectCanvas xmlns="effects.*" xmlns:cnt="containers.*" xmlns:ctrl="controls.*" xmlns:mx="http://www.adobe.com/2006/mxml"
		xmlns:local="*" xmlns:imageOperations="imagine.imageOperations.*" xmlns:flash.filters="flash.filters.*"
		width="100%" height="314" premium="true" xmlns:objectOperations="imagine.objectOperations.*" xmlns:util="util.*" urlid="Lightning">
	<mx:Script>
		<![CDATA[
			import containers.NestedControlCanvasBase;
			
			import util.LocUtil;
			
			override public function Select(efcnvCleanup:NestedControlCanvasBase): Boolean {
				var fSelected:Boolean = super.Select(efcnvCleanup);
				if (fSelected)
					ApplyStyle();
				return fSelected;
			}
			
			// Apply the selected style				
			public function ApplyStyle(): void {
				// NOTE: new properties must be added to the default style before they can be
				// overridden in unique styles.
				var obDefaultStyle:Object = {
					childrenDetachedEnd: true, alphaFadeType: "tip", thicknessFadeType: "generation",
					power: 6, childrenMaxCount: 5, jaggedAmount: 0.0, color: 0xffffff, alpha: 1.0,
					lightningBlendMode: BlendMode.NORMAL
				}
				
				var obStyle:Object = _cboxStyles.selectedItem;
				for (var strProp:String in obDefaultStyle) {
					// Have the style object override the defaults
					var obValue:* = (strProp in obStyle) ? obStyle[strProp] : obDefaultStyle[strProp];
					
					switch (strProp) {
					case "label":
					case "mx_internal_uid":
						// Ignore these properties
						break;
						
					case "power":
						_sldrPower.value = obValue;
						break;
						
					case "color":
						_cpkr.selectedColor = _op[strProp] = obValue;
						break;
						
					case "childrenMaxCount":
						_sldrChildrenMax.value = _op[strProp] = obValue;
						break;
						
					case "alpha":
						_sldrFade.value = (1 - obValue) * 100;
						break;
												
					default:
						_op[strProp] = obValue;
						break;
					}
				}
			
				super.OnOpChange();
			}
			
			// Hand-tuned scaling factors to compensate for different image resolutions			
			// <320, <640, <1280, <2560, >=2560
			static private var s_aanThickness:Array = [ [1, 3], [1, 7], [1, 9], [1, 15], [1, 23] ];
			static private var s_aanGlowStrength:Array = [ [1, 7], [1, 7], [1, 7], [1, 7], [1, 7] ];
			static private var s_aanGlowBlur:Array = [ [0, 20], [0, 20], [0, 28], [0, 40], [0, 64] ];

			public function get scaleIndex(): int {
				var cxy:Number = Math.max(imagewidth, imageheight);
				if (cxy < 320)
					return 0;
				else if (cxy < 640)
					return 1;
				else if (cxy < 1280)
					return 2;
				else if (cxy < 2560)
					return 3;
				else
					return 4;
			}
			
			public function GetThickness(i:int): Number { // i = 1-11
				var anMinMax:Array = s_aanThickness[scaleIndex];
				return anMinMax[0] + (anMinMax[1] - anMinMax[0]) * ((i - 1) / 10);
			}
			
			public function GetGlowStrength(i:int): Number { // i = 1-11
				var anMinMax:Array = s_aanGlowStrength[scaleIndex];
				return Math.min(anMinMax[0] + (anMinMax[1] - anMinMax[0]) * ((i - 1) / 10), 6);
			}
			
			public function GetGlowBlur(i:int): Number { // i = 1-11
				var anMinMax:Array = s_aanGlowBlur[scaleIndex];
				return anMinMax[0] + (anMinMax[1] - anMinMax[0]) * ((i - 1) / 10);
			}
			
		]]>
	</mx:Script>

	<mx:Array id="_resetValues">
		<local:StoredValue target="_cpkr.selectedColor"/>
		<local:StoredValue target="_cboxStyles.selectedIndex"/>
		<local:StoredValue target="startPos"/>
		<local:StoredValue target="endPos"/>
		<local:StoredValue target="_sldrPower.value"/>
		<local:StoredValue target="_sldrChildrenMax.value"/>
	</mx:Array>
	
	<mx:ArrayCollection id="_acStyles">
		<!-- NOTE: new properties must be added to the default style above before they can be
			 overridden in unique styles. -->
		<mx:Object label="{Resource.getString('LightningEffect', 'style1')}"/>
		<mx:Object label="{Resource.getString('LightningEffect', 'style2')}" childrenDetachedEnd="false"
				alphaFadeType="generation" thicknessFadeType="none" power="4" childrenMaxCount="4"/>
		<mx:Object label="{Resource.getString('LightningEffect', 'style3')}" childrenMaxCount="10"/>
		<mx:Object label="{Resource.getString('LightningEffect', 'style4')}" childrenDetachedEnd="false"
				alphaFadeType="generation" thicknessFadeType="none" power="4" childrenMaxCount="10"/>
		<mx:Object label="{Resource.getString('LightningEffect', 'style5')}" jaggedAmount="1"/>
		<mx:Object label="{Resource.getString('LightningEffect', 'style6')}" color="0xffffc0"/>
		<mx:Object label="{Resource.getString('LightningEffect', 'style7')}" power="6" childrenMaxCount="2"
				color="0x111155" alpha="0.30"/>
	</mx:ArrayCollection>

	<mx:DropShadowFilter id="_fiWhiteShad" blurX="1" blurY="1" distance="1" color="#FFFFFF" alpha="1" quality="3" angle="90"/>

	<ctrl:EffectButton id="_efbtn" strTitle="@Resource(key='_efbtn', bundle='LightningEffect')"
			strAuthor="@Resource(key='_efbtn_1', bundle='LightningEffect')"
			strImageSource="../graphics/effects/Halloween/lightning.jpg" premium="{premium}"/>
	<mx:String id="_strHelpText">{Resource.getString('LightningEffect', '_strHelpText')}</mx:String>
	
	<mx:VBox x="10" y="70" verticalGap="0">
		<!-- caption styles dropdown -->
		<mx:Label text="@Resource(key='styles', bundle='LightningEffect')" styleName="sliderTitle" paddingBottom="-3"/>
		<mx:ComboBox id="_cboxStyles" rowCount="10" width="190" height="26"
				dataProvider="{_acStyles}" change="ApplyStyle()"/>
				
		<!-- variation -->
		<mx:HBox width="190" paddingBottom="-5" paddingTop="5">
			<mx:Label text="@Resource(key='variation', bundle='LightningEffect')" styleName="sliderTitle"/>
			<mx:Label text="{_sldrVariation.value}" styleName="sliderValue" textAlign="right" width="100%"/>
		</mx:HBox>
		<ctrl:HSliderFastDrag id="_sldrVariation" width="190" change="OnOpChange()" 
				minimum="1" maximum="100" value="{zeroR + int(Math.random() * 99 + 1.5)}" liveDragging="true" snapInterval="1" showDataTip="false"/>

		<!-- power -->
		<mx:HBox width="190" paddingBottom="-5" paddingTop="5">
			<mx:Label text="@Resource(key='power', bundle='LightningEffect')" styleName="sliderTitle"/>
			<mx:Label text="{_sldrPower.value}" styleName="sliderValue" textAlign="right" width="100%"/>
		</mx:HBox>
		<ctrl:HSliderFastDrag id="_sldrPower" width="190" change="OnOpChange()" 
				minimum="1" maximum="11" value="5" liveDragging="true" snapInterval="1" showDataTip="false"/>

		<!-- branches -->
		<mx:HBox width="190" paddingBottom="-5" paddingTop="5">
			<mx:Label text="@Resource(key='childrenmax', bundle='LightningEffect')" styleName="sliderTitle"/>
			<mx:Label text="{_sldrChildrenMax.value}" styleName="sliderValue" textAlign="right" width="100%"/>
		</mx:HBox>
		<ctrl:HSliderFastDrag id="_sldrChildrenMax" width="190" change="OnOpChange()"
				minimum="0" maximum="10" value="5" liveDragging="true" snapInterval="1" showDataTip="false"/>

		<!-- blendMode
		<mx:Script>
	        <![CDATA[
	            [Bindable]
	            public var aBlendModes:Array = [ 
	                {label:"Normal", data:"normal"}, 
	                {label:"Add", data:"add"}, 
	                {label:"Darken", data:"darken"}, 
	                {label:"Difference", data:"difference"}, 
	                {label:"Hardlight", data:"hardlight"}, 
	                {label:"Lighten", data:"lighten"}, 
	                {label:"Multiply", data:"multiply"}, 
	                {label:"Overlay", data:"overlay"}, 
	                {label:"Screen", data:"screen"}, 
	                {label:"Subtract", data:"subtract"}];
	        ]]>
	    </mx:Script>
	    <mx:VBox x="8" y="135" verticalGap="-3" paddingTop="5" paddingBottom="5">
		    <mx:Label text="@Resource(key='blendModes', bundle='LightningEffect')" styleName="sliderTitle"/>
			<mx:ComboBox dataProvider="{aBlendModes}" id="_cbBlendMode" change="OnOpChange()" height="26" width="190" />
	    </mx:VBox>
	    -->
	    
	    <mx:Spacer height="8"/>
	    
	    <!-- color -->
		<mx:VBox paddingTop="5" paddingLeft="5" paddingRight="8" paddingBottom="6" width="190" horizontalScrollPolicy="off" verticalGap="0" filters="{[_fiWhiteShad]}"
				cornerRadius="5" backgroundColor="#ffffff" borderColor="#d9d9d9" borderStyle="solid" backgroundAlpha=".4" verticalAlign="middle">
			<!-- background color picker -->
			<mx:HBox horizontalGap="5" width="100%">
				<ctrl:ResizingLabel text="@Resource(key='_lbColor', bundle='LightningEffect')" styleName="sliderTitle" paddingTop="2" width="100%" autoFontSizeGap="1"/>
				<ctrl:HSBColorPicker id="_cpkr" selectedColor="{0xffffff + zeroR}" liveColorChange="OnBufferedOpChange()" width="50"/>
			</mx:HBox>
		</mx:VBox>
	    
		<!-- fade -->
	    <mx:HBox width="190" paddingBottom="-5" paddingTop="3">
			<mx:Label text="@Resource(key='fade', bundle='LightningEffect')" styleName="sliderTitle"/>
			<mx:Label text="{LocUtil.pct((_sldrFade.value))}" styleName="sliderValue" textAlign="right" width="100%"/>
		</mx:HBox>
		<ctrl:HSliderPlus width="190" minimum="0" maximum="100" value="0" id="_sldrFade" change="OnOpChange()" liveDragging="true" showDataTip="false"/>
	
		<ctrl:ApplyCancelEffectButtons addBoxPadding="true" premium="{premium}"/>
	</mx:VBox>
	
	<util:BindableDynamicObject id="startPos" x="{imagewidth / 2}" y="{zeroR + 0}"/>
	<util:BindableDynamicObject id="endPos" x="{imagewidth / 2}" y="{imageheight}"/>
</cnt:TwoPointOverlayEffectCanvas>
